name: Build

#プルリクエスト作成時に実行(他にもpush時など設定できます)
on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  rspec_job:
    #ubuntu環境で動かします
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:17.6-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    # https://github.com/ruby/setup-ruby
    steps:
      - uses: Kesin11/actions-timeline@v2
        with:
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          show-waiting-runner: true
      - name: checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v5
      - name: checkout pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Ruby version
        uses: ruby/setup-ruby@master
        with:
          ruby-version: .tool-versions

      - name: Setup bundler
        run: gem install bundler
      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          package-manager-cache: false
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.0
      - name: Install dependencies
        run: pnpm install
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: bundle install
        run: |
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Precompile assets
        run: |
          pnpm build
          bundle exec rake assets:precompile
        env:
          RAILS_ENV: test

      - name: Run RSpec
        run: bundle exec rspec
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      - name: Fix lcov file paths and show content
        if: always()
        run: |
          sed -i 's|SF:./|SF:|g' coverage/lcov.info
          echo "--- Fixed lcov.info content ---"
          cat coverage/lcov.info
      - name: Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info
          fail_ci_if_error: true
          disable_file_fixes: true
          verbose: true
